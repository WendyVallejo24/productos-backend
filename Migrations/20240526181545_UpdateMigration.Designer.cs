// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyectoUsabilidad.Data;

#nullable disable

namespace proyectoUsabilidad.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240526181545_UpdateMigration")]
    partial class UpdateMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("proyectoUsabilidad.Models.Categorias", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("proyectoUsabilidad.Models.DetallePedido", b =>
                {
                    b.Property<int>("IdDetallePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetallePedido"), 1L, 1);

                    b.Property<int>("EstadoIdEstadoPedido")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.HasKey("IdDetallePedido");

                    b.HasIndex("EstadoIdEstadoPedido");

                    b.ToTable("DetallePedido");
                });

            modelBuilder.Entity("proyectoUsabilidad.Models.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalle"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotaVentaNumeroNota")
                        .HasColumnType("int");

                    b.Property<int>("NumeroNota")
                        .HasColumnType("int");

                    b.Property<int>("ProductoCodigo")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetalle");

                    b.HasIndex("NotaVentaNumeroNota");

                    b.HasIndex("ProductoCodigo");

                    b.ToTable("DetalleVenta");
                });

            modelBuilder.Entity("proyectoUsabilidad.Models.EstadoPago", b =>
                {
                    b.Property<int>("IdEstadoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoPago"), 1L, 1);

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoPago");

                    b.ToTable("EstadoPago");
                });

            modelBuilder.Entity("proyectoUsabilidad.Models.EstadoPedidos", b =>
                {
                    b.Property<int>("IdEstadoPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoPedido"), 1L, 1);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoPedido");

                    b.ToTable("EstadosPedidos");
                });

            modelBuilder.Entity("proyectoUsabilidad.Models.Marcas", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMarca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("proyectoUsabilidad.Models.NotaVentas", b =>
                {
                    b.Property<int>("NumeroNota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroNota"), 1L, 1);

                    b.Property<int>("DetallePedidoIdDetallePedido")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDetallePedido")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("NumeroNota");

                    b.HasIndex("DetallePedidoIdDetallePedido");

                    b.ToTable("NotaVentas");
                });

            modelBuilder.Entity("proyectoUsabilidad.Models.Productos", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"), 1L, 1);

                    b.Property<int>("CategoriaIdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("Existencia")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<int>("IdUnidadMed")
                        .HasColumnType("int");

                    b.Property<int>("MarcaIdMarca")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadMedidaIdUnidadMed")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("CategoriaIdCategoria");

                    b.HasIndex("MarcaIdMarca");

                    b.HasIndex("UnidadMedidaIdUnidadMed");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("proyectoUsabilidad.Models.UnidadMedida", b =>
                {
                    b.Property<int>("IdUnidadMed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUnidadMed"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUnidadMed");

                    b.ToTable("UnidadMedida");
                });

            modelBuilder.Entity("proyectoUsabilidad.Models.DetallePedido", b =>
                {
                    b.HasOne("proyectoUsabilidad.Models.EstadoPedidos", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoIdEstadoPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("proyectoUsabilidad.Models.DetalleVenta", b =>
                {
                    b.HasOne("proyectoUsabilidad.Models.NotaVentas", "NotaVenta")
                        .WithMany()
                        .HasForeignKey("NotaVentaNumeroNota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoUsabilidad.Models.Productos", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotaVenta");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("proyectoUsabilidad.Models.NotaVentas", b =>
                {
                    b.HasOne("proyectoUsabilidad.Models.DetallePedido", "DetallePedido")
                        .WithMany()
                        .HasForeignKey("DetallePedidoIdDetallePedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetallePedido");
                });

            modelBuilder.Entity("proyectoUsabilidad.Models.Productos", b =>
                {
                    b.HasOne("proyectoUsabilidad.Models.Categorias", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaIdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoUsabilidad.Models.Marcas", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaIdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoUsabilidad.Models.UnidadMedida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaIdUnidadMed")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");

                    b.Navigation("UnidadMedida");
                });
#pragma warning restore 612, 618
        }
    }
}
